matches:
  # コードレビュー依頼
  - trigger: ":airv"
    replace: |
      このコードをレビューしてください。以下の観点でチェックをお願いします：
      - バグや潜在的な問題
      - パフォーマンスの改善点
      - 可読性とメンテナンス性
      - ベストプラクティスへの準拠
      
      ```
      $|$
      ```
    
  - trigger: ":airvja"
    replace: |
      以下のコードをレビューしてください：
      - バグや問題点の指摘
      - パフォーマンス改善の提案
      - 可読性向上の提案
      - セキュリティ面の確認
      
      ```
      $|$
      ```

  # リファクタリング依頼
  - trigger: ":airf"
    replace: |
      以下のコードをリファクタリングしてください：
      - 可読性を向上させる
      - DRY原則に従う
      - 適切な関数分割
      - 命名の改善
      
      ```
      $|$
      ```

  - trigger: ":airfclean"
    replace: |
      このコードをクリーンコードの原則に従ってリファクタリングしてください。
      特に以下を重視：
      - 単一責任の原則
      - 関数の分割
      - 意図が明確な命名
      
      ```
      $|$
      ```

  # バグ修正依頼
  - trigger: ":aibug"
    replace: |
      以下のコードにバグがあります。問題を特定して修正してください：
      
      エラー内容：
      $|$
      
      コード：
      ```
      
      ```

  - trigger: ":aierr"
    replace: |
      以下のエラーが発生しています。原因を特定して解決策を提案してください：
      
      ```
      $|$
      ```

  # テスト生成依頼
  - trigger: ":aitest"
    replace: |
      以下の関数/クラスに対するユニットテストを作成してください：
      - 正常系のテスト
      - 異常系のテスト
      - エッジケースのテスト
      
      ```
      $|$
      ```

  - trigger: ":aitdd"
    replace: |
      TDDアプローチで以下の機能を実装したいです。
      まずテストケースを作成してください：
      
      要件：
      $|$

  # ドキュメント生成依頼
  - trigger: ":aidoc"
    replace: |
      以下のコードに適切なドキュメントコメントを追加してください：
      - 関数の説明
      - パラメータの説明
      - 戻り値の説明
      - 使用例
      
      ```
      $|$
      ```

  - trigger: ":aireadme"
    replace: |
      このプロジェクトのREADME.mdを作成してください。以下を含めてください：
      - プロジェクト概要
      - インストール方法
      - 使用方法
      - 主要な機能
      - ライセンス
      
      プロジェクト情報：
      $|$

  # コード説明依頼
  - trigger: ":aiex"
    replace: |
      以下のコードを初心者にもわかるように詳しく説明してください：
      
      ```
      $|$
      ```

  - trigger: ":aiexstep"
    replace: |
      以下のコードを1行ずつ、何をしているか説明してください：
      
      ```
      $|$
      ```

  # コード生成依頼
  - trigger: ":aigen"
    replace: |
      以下の要件を満たすコードを生成してください：
      
      要件：
      $|$
      
      制約：
      - 
      
      言語：

  - trigger: ":aifunc"
    replace: |
      以下の仕様で関数を実装してください：
      
      関数名：
      入力：
      出力：
      処理内容：$|$

  # パフォーマンス最適化
  - trigger: ":aiperf"
    replace: |
      以下のコードのパフォーマンスを改善してください：
      - 時間計算量の削減
      - 空間計算量の削減
      - 効率的なアルゴリズムの提案
      
      ```
      $|$
      ```

  - trigger: ":aiopt"
    replace: |
      このコードを最適化してください。ボトルネックを特定し、改善案を提示してください：
      
      ```
      $|$
      ```

  # セキュリティチェック
  - trigger: ":aisec"
    replace: |
      以下のコードのセキュリティ脆弱性をチェックしてください：
      - SQLインジェクション
      - XSS攻撃
      - CSRF攻撃
      - その他のセキュリティリスク
      
      ```
      $|$
      ```

  # コード変換
  - trigger: ":aiconv"
    replace: |
      以下のコードを別の言語/フレームワークに変換してください：
      
      変換元：
      変換先：$|$
      
      コード：
      ```
      
      ```

  # アーキテクチャ設計
  - trigger: ":aiarch"
    replace: |
      以下の要件に対するシステムアーキテクチャを設計してください：
      
      要件：
      $|$
      
      考慮事項：
      - スケーラビリティ
      - メンテナンス性
      - パフォーマンス

  # デバッグ支援
  - trigger: ":aidebug"
    replace: |
      このコードをデバッグしてください。期待する動作と実際の動作が異なります：
      
      期待する動作：
      $|$
      
      実際の動作：
      
      
      コード：
      ```
      
      ```

  # ベストプラクティス確認
  - trigger: ":aibp"
    replace: |
      以下のコードが業界のベストプラクティスに従っているか確認してください：
      
      ```
      $|$
      ```

  # コミットメッセージ生成
  - trigger: ":aicommit"
    replace: |
      以下の変更に対する適切なコミットメッセージを生成してください（Conventional Commits形式）：
      
      変更内容：
      $|$

  # API設計
  - trigger: ":aiapi"
    replace: |
      以下の要件を満たすRESTful APIを設計してください：
      
      要件：
      $|$
      
      含めるべき項目：
      - エンドポイント設計
      - リクエスト/レスポンス形式
      - エラーハンドリング
      - 認証方法

  # コード比較
  - trigger: ":aicomp"
    replace: |
      以下の2つのアプローチの違いを説明し、どちらが適切か提案してください：
      
      アプローチA：
      ```
      $|$
      ```
      
      アプローチB：
      ```
      
      ```

  # 学習支援
  - trigger: ":ailearn"
    replace: |
      $|$について学習したいです。
      以下を含めて教えてください：
      - 基本概念
      - 実践的な使用例
      - よくある落とし穴
      - 学習リソース

  # ペアプログラミング風
  - trigger: ":aipair"
    replace: |
      一緒にコーディングしましょう。
      
      実装したい機能：
      $|$
      
      まず、実装方針を提案してください。その後、段階的に実装していきます。

  # クイックフィックス
  - trigger: ":aifix"
    replace: "このコードの問題を修正してください： $|$"

  - trigger: ":aihelp"
    replace: "このエラーを解決する方法を教えてください： $|$"

  # 日本語でのプロンプト
  - trigger: ":あいれびゅー"
    replace: |
      このコードをレビューして、改善点を教えてください：
      
      ```
      $|$
      ```

  - trigger: ":あいせつめい"
    replace: "以下のコードを日本語で説明してください： $|$"

  - trigger: ":あいてすと"
    replace: |
      このコードのテストケースを作成してください：
      
      ```
      $|$
      ```

